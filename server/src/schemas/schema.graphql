type Account {
  id: Int
  email: String
  email_verified: Boolean
  created_at: String
  profile: Profile
  deactivated: Boolean
  deactivated_at: String
  phone_number: String
}

type Profile {
  id: Int
  name: String
  profile_img: String
  updated_at: String
  account: Account
  account_id: Int
  accepted_outings: [Outing]
  pending_outings: [Outing]
  declined_outings: [Outing]
  social_pin: String
  friends: [Profile]
  friendsRelation: [Profile]
}

type Outing {
  id: Int
  name: String
  accepted_profiles: [Profile]
  pending_profiles: [Profile]
  declined_profiles: [Profile]
  creator_profile_id: String
  created_at: String
  start_date_and_time: String
  place_ids: [String]
}

type OutingProfileStates {
  accepted_profiles: [Profile]
  pending_profiles: [Profile]
  declined_profiles: [Profile]
}

type LocationDetails {
  id: Int
  business_status: String
  formatted_address: String
  city: String
  state: String
  lat: Float
  lng: Float
  html_attributions: String
  icon: String
  icon_mask_base_uri: String
  icon_background_color: String
  name: String
  place_id: String
  rating: Float
  user_ratings_total: Int
  types: [String]
  vicinity: String
  formatted_phone_number: String
  plus_compound_code: String
  plus_global_code: String
  open_periods: [String]
  weekday_text: [String]
  photos_references: [String]
  reviews: [String]
  url: String
  website: String
  utc_offset_minutes: Float
  price_level: Int
  expiration_date: String
}

type Friendship {
  id: Int
  requestor_profile_id: Int
  addressee_profile_id: Int
  created_at: String
  frienshipStatus_friendship_relation: [FriendshipStatus]
  notification_addressee_relation: Profile
}

type FriendshipStatus {
  requestor_profile_id: Int
  addressee_profile_id: Int
  modifier_profile_id: Int
  created_at: String
  status_code: String
}

type Notification {
  id: Int
  sender_profile_id: Int
  addressee_profile_id: Int
  created_at: String
  type_code: String
  notification_relation: [NotificationStatus]
  notification_addressee_relation: Profile
  notification_sender_relation: Profile
  outing_id: Int
}

type NotificationStatus {
  id: Int
  notification_id: Int
  modifier_profile_id: Int
  notification_created_at: String
  modified_at: String
  status_code: String
  type_code: String
}

type Query {
  getAccountByEmail(email: String!): Account
  getUserAccount: Account
  profile: Profile
  getProfilesInOuting(id: Int!): OutingProfileStates
  getOuting(id: Int!): Outing
  accounts: [Account]
  profiles: [Profile]
  getAllOutings: [Outing]
  searchCity(city: String!, locationType: String!): [LocationDetails]
  getAccountWithProfileData(email: String!): Account
  getAllFriendships: [Friendship]
  getAllNotifications: [Notification]
  getFriendRequests: [Notification]
  getSentFriendRequests: [Notification]
  getNewNotificationCount: Int
  getFriendshipStatus(target_id: Int!): FriendshipStatus
}

input NofiticationInput {
  id: Int
  sender_profile_id: Int
  addressee_profile_id: Int
  created_at: String
  type_code: String
  outing_id: Int
}

input NotificationStatusInput {
  notification_id: Int
  modifier_profile_id: Int
  modified_at: String
  status_code: String
}

input NotificationMachineInput {
  notification: NofiticationInput
  notificationStatus: NotificationStatusInput
}

type Mutation {
  createAccount(email: String, email_verified: Boolean): Account
  createProfile(name: String, profile_img: String, account_id: Int): Profile
  updateUserAccount(email: String, phone_number: String): Account
  deactivateUserAccount(id: Int!): Account
  createOuting(
    name: String
    created_at: String
    start_date_and_time: String
    place_ids: [String]
  ): Outing
  deleteOuting(id: Int!): String
  updateOuting(id: Int!, name: String, start_date_and_time: String): Outing
  sendOutingInvites(
    outing_id: Int!
    start_date_and_time: String!
    emails: [String!]!
  ): String
  ConnectUserWithOuting(outing_id: Int!, profile_id: Int!): Outing
  DisconnectUserWithOuting(outing_id: Int!, profile_id: Int!): Outing
  UpdateAccountBySocialPin(
    profile_id: Int!
    social_pin: String!
    email: String!
  ): Account
  CreateAccountAndProfile(
    name: String!
    picture: String!
    email: String!
    verified: Boolean!
  ): String
  addFriend(
    requestor_profile_id: Int!
    addressee_profile_id: Int!
  ): FriendshipStatus
  generateOutingNotification(outing_id: Int!): [Notification]
  generateFriendRequest(addressee_profile_id: Int!): Notification
  openNotification(
    type_code: String!
    notification_created_at: String!
    id: Int!
  ): NotificationStatus
  acceptFriendRequest(
    sender_profile_id: Int!
    addressee_profile_id: Int!
    notification_created_at: String!
    notification_id: Int!
  ): NotificationStatus
  declineFriendRequest(
    notification_id: Int!
    notification_created_at: String!
  ): NotificationStatus
}
