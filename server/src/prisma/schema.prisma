// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id             Int      @id @default(autoincrement())
  email          String   @unique @db.VarChar(255)
  email_verified Boolean  @default(false)
  created_at     String   @db.VarChar(255)
  // TODO add scalar profile_id field just like Profile has the scalar account_id field
  profile        Profile?
  deactivated    Boolean  @default(false)
  deactivated_at String   @default("") @db.VarChar(255)
  phone_number   String   @default("") @db.VarChar(255)
}

model Profile {
  id                         Int          @id @unique @default(autoincrement())
  name                       String       @default("") @db.VarChar(255)
  profile_img                String       @default("") @db.VarChar(255)
  updated_at                 String       @default("") @db.VarChar(255)
  account                    Account      @relation(fields: [account_Id], references: [id])
  account_Id                 Int          @unique
  accepted_outings           Outing[]     @relation(name: "Accepted_Profiles")
  pending_outings            Outing[]     @relation(name: "Pending_Profiles")
  declined_outings           Outing[]     @relation(name: "Declined_Profiles")
  social_pin                 String       @unique @default("") @db.VarChar(255)
  requestor_profile_relation Friendship[] @relation("Requestor_Profile")
  addressee_profile_relation Friendship[] @relation("Addressee_Profile")
  last_modified_by_relation  Friendship[] @relation("Last_Modified_By")
  blocked_profile_ids        Int[]        @default([])
}

model Friendship {
  id                         Int              @unique @default(autoincrement())
  requestor_profile_id       Int
  requestor_profile_relation Profile          @relation("Requestor_Profile", fields: [requestor_profile_id], references: [id])
  addressee_profile_id       Int
  addressee_profile_relation Profile          @relation("Addressee_Profile", fields: [addressee_profile_id], references: [id])
  created_at                 String           @db.VarChar(255)
  last_modified_by           Int
  last_modified_by_relation  Profile          @relation("Last_Modified_By", fields: [last_modified_by], references: [id])
  modified_at                String           @db.VarChar(255)
  status_code                String           @db.VarChar(5)
  status_relation            FriendshipStates @relation(fields: [status_code], references: [status_code])

  @@id([requestor_profile_id, addressee_profile_id])
}

model FriendshipStates {
  status_code     String       @id @db.VarChar(5)
  status_name     String       @db.VarChar(255)
  status_relation Friendship[]
}

model Outing {
  id                  Int       @id @default(autoincrement())
  name                String    @db.VarChar(255)
  accepted_profiles   Profile[] @relation(name: "Accepted_Profiles")
  pending_profiles    Profile[] @relation(name: "Pending_Profiles")
  declined_profiles   Profile[] @relation(name: "Declined_Profiles")
  creator_profile_id  Int
  created_at          String    @db.VarChar(255)
  start_date_and_time String    @db.VarChar(255)
  place_ids           String[]
}

model LocationDetails {
  id                     Int      @id @default(autoincrement())
  business_status        String?  @default("") @db.VarChar(255)
  formatted_address      String?  @default("") @db.VarChar(255)
  city                   String?  @default("") @db.VarChar(255)
  state                  String?  @default("") @db.VarChar(255)
  lat                    Decimal?
  lng                    Decimal?
  plus_compound_code     String?  @default("") @db.VarChar(255)
  plus_global_code       String?  @default("") @db.VarChar(255)
  vicinity               String?  @default("") @db.VarChar(255)
  icon                   String?  @default("") @db.VarChar(255)
  icon_mask_base_uri     String?  @default("") @db.VarChar(255)
  icon_background_color  String?  @default("") @db.VarChar(255)
  name                   String?  @default("") @db.VarChar(255)
  place_id               String?  @unique @default("") @db.VarChar(255)
  types                  String[]
  rating                 Decimal?
  user_ratings_total     Int?
  formatted_phone_number String?  @default("") @db.VarChar(255)
  open_periods           String[]
  weekday_text           String[]
  utc_offset_minutes     Int?
  photos_references      String[]
  reviews                String[]
  price_level            Int?
  url                    String?  @default("") @db.VarChar(255)
  website                String?  @default("") @db.VarChar(255)
  html_attributions      String?
  expiration_date        String   @default("") @db.VarChar(255)
}
