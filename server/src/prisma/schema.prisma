// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// When a person first signs up for the site, and they go through the auth0 flow, we'll consider this making their 'Account'
// This will hold the basic authentication information provided by Auth0
// Then we'll have a seperate 'Profile' table which will hold all other relevant user data (outings, friends, phone number, custom profile image, favorites/preferences, etc)
// The two models will be one-to-one, as an account can only have one associated profile and vice versa
// Then when someone logs in we can fire a 'GetProfileByAccountEmail' query to fetch the user's profile data based on the email we get from Auth0 to fetch the Account, and then find the linked/associated user's Profile

model Account {
  id             Int      @id @default(autoincrement())
  email          String   @unique @db.VarChar(255)
  email_verified Boolean  @default(false)
  created_at     String   @db.VarChar(255)
  profile        Profile?
  deactivated    Boolean  @default(false)
  deactivated_at String   @default("") @db.VarChar(255)
  phone_number   String   @default("") @db.VarChar(255)
}

model Profile {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar(255)
  profile_img     String    @db.VarChar(255)
  updated_at      String    @db.VarChar(255)
  account         Account   @relation(fields: [account_Id], references: [id])
  account_Id      Int       @unique
  outings         Outing[]  @relation(name: "Profiles_In_Outing")
  social_pin      String    @unique @default("") @db.VarChar(255)
  friends         Profile[] @relation("Friends")
  friendsRelation Profile[] @relation("Friends")
}

model Outing {
  id                  Int       @id @default(autoincrement())
  name                String    @db.VarChar(255)
  profiles            Profile[] @relation(name: "Profiles_In_Outing")
  creator_profile_id  Int
  created_at          String    @db.VarChar(255)
  start_date_and_time String    @db.VarChar(255)
  place_ids           String[]
}

model LocationDetails {
  id                     Int      @id @default(autoincrement())
  business_status        String?  @default("") @db.VarChar(255)
  formatted_address      String?  @default("") @db.VarChar(255)
  city                   String?  @default("") @db.VarChar(255)
  state                  String?  @default("") @db.VarChar(255)
  lat                    Decimal?
  lng                    Decimal?
  plus_compound_code     String?  @default("") @db.VarChar(255)
  plus_global_code       String?  @default("") @db.VarChar(255)
  vicinity               String?  @default("") @db.VarChar(255)
  icon                   String?  @default("") @db.VarChar(255)
  icon_mask_base_uri     String?  @default("") @db.VarChar(255)
  icon_background_color  String?  @default("") @db.VarChar(255)
  name                   String?  @default("") @db.VarChar(255)
  place_id               String?  @unique @default("") @db.VarChar(255)
  types                  String[]
  rating                 Decimal?
  user_ratings_total     Int?
  formatted_phone_number String?  @default("") @db.VarChar(255)
  open_periods           String[]
  weekday_text           String[]
  utc_offset_minutes     Int?
  photos_references      String[]
  reviews                String[]
  price_level            Int?
  url                    String?  @default("") @db.VarChar(255)
  website                String?  @default("") @db.VarChar(255)
  html_attributions      String?
  expiration_date        String   @default("") @db.VarChar(255)
}
